name: CI-build-and-push-image-for-dotnetapp

on:
  push:
    branches: [ main ]
    paths-ignore:
      - README.md
      - .vscode/**
      - .gitignore
  pull_request:
    branches: [ main ]
    paths-ignore:
      - README.md
      - .vscode/**
      - .gitignore
  workflow_dispatch:

jobs:
  docker:
    runs-on: windows-latest  # âœ… Use Windows runner
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Ensure Windows Containers Mode
        run: |
          Write-Host "ðŸ”„ Checking Docker mode..."
          $dockerInfo = docker info
          if ($dockerInfo -match "OSType: linux") {
            Write-Host "ðŸš¨ Switching Docker to Windows mode..."
            & 'C:\Program Files\Docker\Docker\DockerCli.exe' -SwitchDaemon
          }
          docker version

      - name: Restart Docker Service
        run: |
          Restart-Service docker

      - name: Verify Base Image Availability
        run: |
          docker pull mcr.microsoft.com/dotnet/aspnet:8.0 || echo "Base image unavailable!"

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/dockerfordotnetlicense:latest .
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/dockerfordotnetlicense:latest ${{ secrets.DOCKERHUB_USERNAME }}/dockerfordotnetlicense:${{ github.run_number }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/dockerfordotnetlicense:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/dockerfordotnetlicense:${{ github.run_number }}
